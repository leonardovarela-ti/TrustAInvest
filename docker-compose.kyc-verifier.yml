services:
  postgres:
    image: postgres:14-alpine
    container_name: kyc-verifier-postgres
    environment:
      POSTGRES_USER: trustainvest
      POSTGRES_PASSWORD: trustainvest
      POSTGRES_DB: trustainvest
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./scripts/init-admin-user.sql:/scripts/init-admin-user.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trustainvest"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  kyc-verifier-service:
    build:
      context: .
      dockerfile: cmd/kyc-verifier-service/Dockerfile
    container_name: kyc-verifier-service
    environment:
      DATABASE_URL: postgres://trustainvest:trustainvest@postgres:5432/trustainvest?sslmode=disable
      JWT_SECRET: your-secret-key
      PORT: 8090
      CORS_ALLOWED_ORIGINS: "*"
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  kyc-verifier-ui:
    image: nginx:alpine
    container_name: kyc-verifier-ui
    volumes:
      - ./kyc-verifier-ui/web:/usr/share/nginx/html
      - ./kyc-verifier-ui/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:3000"
    depends_on:
      - kyc-verifier-service
    environment:
      API_URL: http://kyc-verifier-service:8090/api
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:
    name: trustainvestcom_backend
    external: true
